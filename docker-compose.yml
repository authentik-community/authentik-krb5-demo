---
services:
  postgresql:
    image: docker.io/library/postgres:16
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: postgres_password
      POSTGRES_USER: authentik
      POSTGRES_DB: authentik
    volumes:
      - ./volumes/postgres:/var/lib/postgresql/data
  redis:
    image: docker.io/library/redis:7
    command: --save 60 1 --loglevel warning
    restart: unless-stopped
    volumes:
      - ./volumes/redis:/data
  server:
    image: ghcr.io/goauthentik/dev-server:gh-kerberos-source-reworked
    restart: unless-stopped
    command: server
    environment:
      AUTHENTIK_SECRET_KEY: secret_key
      AUTHENTIK_REDIS__HOST: redis
      AUTHENTIK_POSTGRESQL__HOST: postgresql
      AUTHENTIK_POSTGRESQL__USER: authentik
      AUTHENTIK_POSTGRESQL__NAME: authentik
      AUTHENTIK_POSTGRESQL__PASSWORD: postgres_password
    volumes:
      - ./volumes/shared:/shared:ro
    ports:
      - 9000:9000
    depends_on:
      - postgresql
      - redis
  worker:
    image: ghcr.io/goauthentik/dev-server:gh-kerberos-source-reworked
    restart: unless-stopped
    command: worker
    environment:
      AUTHENTIK_SECRET_KEY: secret_key
      AUTHENTIK_REDIS__HOST: redis
      AUTHENTIK_POSTGRESQL__HOST: postgresql
      AUTHENTIK_POSTGRESQL__USER: authentik
      AUTHENTIK_POSTGRESQL__NAME: authentik
      AUTHENTIK_POSTGRESQL__PASSWORD: postgres_password
    volumes:
      - ./blueprints/source-kerberos.yaml:/blueprints/source-kerberos.yaml:ro
      - ./volumes/shared:/shared:ro
    depends_on:
      - postgresql
      - redis
  kdc:
    image: ghcr.io/authentik-community/krb5:0.1.0
    restart: unless-stopped
    environment:
      KRB5_REALM: AUTHENTIK.COMPANY
    volumes:
      - ./volumes/krb5kdc:/var/lib/krb5kdc
      - ./volumes/shared:/shared
    ports:
      - 8888:8888/udp
      - 8888:8888/tcp
      - 8749:8749/tcp
    user: root:root
